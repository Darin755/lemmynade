// FILE GENERATED AUTOMATICALLY, TO NOT EDIT BY HAND

import 'package:flutter/material.dart';
import 'package:flutter_gen/gen_l10n/l10n.dart';

extension L10nFromString on String {
  String tr(BuildContext context) {
    switch (this) {
      case 'add_account':
        return L10n.of(context).add_account;
      case 'select_instance':
        return L10n.of(context).select_instance;
      case 'accounts':
        return L10n.of(context).accounts;
      case 'appearance':
        return L10n.of(context).appearance;
      case 'add_instance':
        return L10n.of(context).add_instance;
      case 'sign_in':
        return L10n.of(context).sign_in;
      case 'register':
        return L10n.of(context).register;
      case 'settings':
        return L10n.of(context).settings;
      case 'password':
        return L10n.of(context).password;
      case 'email_or_username':
        return L10n.of(context).email_or_username;
      case 'posts':
        return L10n.of(context).posts;
      case 'comments':
        return L10n.of(context).comments;
      case 'modlog':
        return L10n.of(context).modlog;
      case 'community':
        return L10n.of(context).community;
      case 'url':
        return L10n.of(context).url;
      case 'title':
        return L10n.of(context).title;
      case 'body':
        return L10n.of(context).body;
      case 'nsfw':
        return L10n.of(context).nsfw;
      case 'post':
        return L10n.of(context).post;
      case 'save':
        return L10n.of(context).save;
      case 'send_message':
        return L10n.of(context).send_message;
      case 'subscribed':
        return L10n.of(context).subscribed;
      case 'local':
        return L10n.of(context).local;
      case 'all':
        return L10n.of(context).all;
      case 'replies':
        return L10n.of(context).replies;
      case 'mentions':
        return L10n.of(context).mentions;
      case 'from':
        return L10n.of(context).from;
      case 'to':
        return L10n.of(context).to;
      case 'deleted_by_creator':
        return L10n.of(context).deleted_by_creator;
      case 'more':
        return L10n.of(context).more;
      case 'mark_as_read':
        return L10n.of(context).mark_as_read;
      case 'mark_as_unread':
        return L10n.of(context).mark_as_unread;
      case 'reply':
        return L10n.of(context).reply;
      case 'edit':
        return L10n.of(context).edit;
      case 'delete':
        return L10n.of(context).delete;
      case 'restore':
        return L10n.of(context).restore;
      case 'yes':
        return L10n.of(context).yes;
      case 'no':
        return L10n.of(context).no;
      case 'avatar':
        return L10n.of(context).avatar;
      case 'banner':
        return L10n.of(context).banner;
      case 'display_name':
        return L10n.of(context).display_name;
      case 'bio':
        return L10n.of(context).bio;
      case 'email':
        return L10n.of(context).email;
      case 'matrix_user':
        return L10n.of(context).matrix_user;
      case 'sort_type':
        return L10n.of(context).sort_type;
      case 'type':
        return L10n.of(context).type;
      case 'show_nsfw':
        return L10n.of(context).show_nsfw;
      case 'send_notifications_to_email':
        return L10n.of(context).send_notifications_to_email;
      case 'delete_account':
        return L10n.of(context).delete_account;
      case 'saved':
        return L10n.of(context).saved;
      case 'communities':
        return L10n.of(context).communities;
      case 'users':
        return L10n.of(context).users;
      case 'theme':
        return L10n.of(context).theme;
      case 'language':
        return L10n.of(context).language;
      case 'hot':
        return L10n.of(context).hot;
      case 'new_':
        return L10n.of(context).new_;
      case 'old':
        return L10n.of(context).old;
      case 'top':
        return L10n.of(context).top;
      case 'chat':
        return L10n.of(context).chat;
      case 'admin':
        return L10n.of(context).admin;
      case 'by':
        return L10n.of(context).by;
      case 'not_an_admin':
        return L10n.of(context).not_an_admin;
      case 'couldnt_find_post':
        return L10n.of(context).couldnt_find_post;
      case 'not_logged_in':
        return L10n.of(context).not_logged_in;
      case 'site_ban':
        return L10n.of(context).site_ban;
      case 'community_ban':
        return L10n.of(context).community_ban;
      case 'downvotes_disabled':
        return L10n.of(context).downvotes_disabled;
      case 'invalid_url':
        return L10n.of(context).invalid_url;
      case 'locked':
        return L10n.of(context).locked;
      case 'couldnt_create_comment':
        return L10n.of(context).couldnt_create_comment;
      case 'couldnt_like_comment':
        return L10n.of(context).couldnt_like_comment;
      case 'couldnt_update_comment':
        return L10n.of(context).couldnt_update_comment;
      case 'no_comment_edit_allowed':
        return L10n.of(context).no_comment_edit_allowed;
      case 'couldnt_save_comment':
        return L10n.of(context).couldnt_save_comment;
      case 'couldnt_get_comments':
        return L10n.of(context).couldnt_get_comments;
      case 'report_reason_required':
        return L10n.of(context).report_reason_required;
      case 'report_too_long':
        return L10n.of(context).report_too_long;
      case 'couldnt_create_report':
        return L10n.of(context).couldnt_create_report;
      case 'couldnt_resolve_report':
        return L10n.of(context).couldnt_resolve_report;
      case 'invalid_post_title':
        return L10n.of(context).invalid_post_title;
      case 'couldnt_create_post':
        return L10n.of(context).couldnt_create_post;
      case 'couldnt_like_post':
        return L10n.of(context).couldnt_like_post;
      case 'couldnt_find_community':
        return L10n.of(context).couldnt_find_community;
      case 'couldnt_get_posts':
        return L10n.of(context).couldnt_get_posts;
      case 'no_post_edit_allowed':
        return L10n.of(context).no_post_edit_allowed;
      case 'couldnt_save_post':
        return L10n.of(context).couldnt_save_post;
      case 'site_already_exists':
        return L10n.of(context).site_already_exists;
      case 'couldnt_update_site':
        return L10n.of(context).couldnt_update_site;
      case 'invalid_community_name':
        return L10n.of(context).invalid_community_name;
      case 'community_already_exists':
        return L10n.of(context).community_already_exists;
      case 'community_moderator_already_exists':
        return L10n.of(context).community_moderator_already_exists;
      case 'community_follower_already_exists':
        return L10n.of(context).community_follower_already_exists;
      case 'not_a_moderator':
        return L10n.of(context).not_a_moderator;
      case 'couldnt_update_community':
        return L10n.of(context).couldnt_update_community;
      case 'no_community_edit_allowed':
        return L10n.of(context).no_community_edit_allowed;
      case 'system_err_login':
        return L10n.of(context).system_err_login;
      case 'community_user_already_banned':
        return L10n.of(context).community_user_already_banned;
      case 'couldnt_find_that_username_or_email':
        return L10n.of(context).couldnt_find_that_username_or_email;
      case 'password_incorrect':
        return L10n.of(context).password_incorrect;
      case 'registration_closed':
        return L10n.of(context).registration_closed;
      case 'invalid_password':
        return L10n.of(context).invalid_password;
      case 'passwords_dont_match':
        return L10n.of(context).passwords_dont_match;
      case 'captcha_incorrect':
        return L10n.of(context).captcha_incorrect;
      case 'invalid_username':
        return L10n.of(context).invalid_username;
      case 'bio_length_overflow':
        return L10n.of(context).bio_length_overflow;
      case 'couldnt_update_user':
        return L10n.of(context).couldnt_update_user;
      case 'couldnt_update_private_message':
        return L10n.of(context).couldnt_update_private_message;
      case 'couldnt_update_post':
        return L10n.of(context).couldnt_update_post;
      case 'couldnt_create_private_message':
        return L10n.of(context).couldnt_create_private_message;
      case 'no_private_message_edit_allowed':
        return L10n.of(context).no_private_message_edit_allowed;

      default:
        return this;
    }
  }
}
